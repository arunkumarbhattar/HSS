[2022-11-11 16:32:59] This is codeql database create cflowDB --overwrite --language=cpp
[2022-11-11 16:32:59] Log file was started late.
[2022-11-11 16:32:59] [PROGRESS] database create> Initializing database at /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/cflowDB.
[2022-11-11 16:32:59] Running plumbing command: codeql database init --overwrite --language=cpp --source-root=/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow --allow-missing-source-root=false --allow-already-existing -- /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/cflowDB
[2022-11-11 16:32:59] [PROGRESS] database init> Counting lines of code in /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow
[2022-11-11 16:32:59] [PROGRESS] database init> Resolving extractor cpp.
[2022-11-11 16:32:59] Calling plumbing command: codeql resolve languages --format=json
[2022-11-11 16:32:59] [DETAILS] resolve languages> Scanning for [codeql-extractor.yml] from /home/arun/codeql/.codeqlmanifest.json
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/properties/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/html/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/csv/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/csharp/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/cpp/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/java/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/javascript/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/ruby/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/python/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/xml/codeql-extractor.yml.
[2022-11-11 16:32:59] [DETAILS] resolve languages> Parsing /home/arun/codeql/go/codeql-extractor.yml.
[2022-11-11 16:32:59] Plumbing command codeql resolve languages completed:
                      {
                        "extractors" : {
                          "properties" : [
                            {
                              "extractor_root" : "/home/arun/codeql/properties"
                            }
                          ],
                          "html" : [
                            {
                              "extractor_root" : "/home/arun/codeql/html"
                            }
                          ],
                          "csv" : [
                            {
                              "extractor_root" : "/home/arun/codeql/csv"
                            }
                          ],
                          "csharp" : [
                            {
                              "extractor_root" : "/home/arun/codeql/csharp",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'brotli' (the default, to write brotli-compressed TRAP), 'gzip', and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip|brotli)$"
                                    }
                                  }
                                },
                                "buildless" : {
                                  "title" : "Whether to use buildless (standalone) extraction.",
                                  "description" : "A value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "cil" : {
                                  "title" : "Whether to enable CIL extraction.",
                                  "description" : "A value indicating, whether CIL extraction should be enabled. The default is 'true'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "cpp" : [
                            {
                              "extractor_root" : "/home/arun/codeql/cpp"
                            }
                          ],
                          "java" : [
                            {
                              "extractor_root" : "/home/arun/codeql/java",
                              "extractor_options" : {
                                "exclude" : {
                                  "title" : "A glob excluding files from analysis.",
                                  "description" : "A glob indicating what files to exclude from the analysis.\n",
                                  "type" : "string"
                                }
                              }
                            }
                          ],
                          "javascript" : [
                            {
                              "extractor_root" : "/home/arun/codeql/javascript",
                              "extractor_options" : { }
                            }
                          ],
                          "ruby" : [
                            {
                              "extractor_root" : "/home/arun/codeql/ruby"
                            }
                          ],
                          "python" : [
                            {
                              "extractor_root" : "/home/arun/codeql/python"
                            }
                          ],
                          "xml" : [
                            {
                              "extractor_root" : "/home/arun/codeql/xml"
                            }
                          ],
                          "go" : [
                            {
                              "extractor_root" : "/home/arun/codeql/go"
                            }
                          ]
                        }
                      }
[2022-11-11 16:32:59] [DETAILS] database init> Found candidate extractor root for cpp: /home/arun/codeql/cpp.
[2022-11-11 16:32:59] [PROGRESS] database init> Successfully loaded extractor C/C++ (cpp) from /home/arun/codeql/cpp.
[2022-11-11 16:32:59] [PROGRESS] database init> Created skeleton CodeQL database at /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/cflowDB. This in-progress database is ready to be populated by an extractor.
[2022-11-11 16:32:59] Plumbing command codeql database init completed.
[2022-11-11 16:32:59] Using autobuild script /home/arun/codeql/cpp/tools/autobuild.sh.
[2022-11-11 16:32:59] [DETAILS] database create> Detected autobuild command for C/C++: /home/arun/codeql/cpp/tools/autobuild.sh.
[2022-11-11 16:32:59] [PROGRESS] database create> Running build command: [/home/arun/codeql/cpp/tools/autobuild.sh]
[2022-11-11 16:32:59] Running plumbing command: codeql database trace-command --working-dir=/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow --index-traceless-dbs --no-db-cluster -- /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/cflowDB /home/arun/codeql/cpp/tools/autobuild.sh
[2022-11-11 16:32:59] [PROGRESS] database trace-command> Running command in /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow: [/home/arun/codeql/cpp/tools/autobuild.sh]
[2022-11-11 16:32:59] [build-stderr] + TOOLS_DIR=/home/arun/codeql/cpp/tools
[2022-11-11 16:32:59] [build-stderr] + /home/arun/codeql/cpp/tools/detect_source_root
[2022-11-11 16:32:59] [build-stdout] detect_source_root: Using build system found in '.'
[2022-11-11 16:32:59] [build-stderr] + '[' -L _lgtm_detected_source_root ']'
[2022-11-11 16:32:59] [build-stderr] ++ readlink _lgtm_detected_source_root
[2022-11-11 16:32:59] [build-stderr] + cd .
[2022-11-11 16:32:59] [build-stderr] + export CXXFLAGS=-fpermissive
[2022-11-11 16:32:59] [build-stderr] + CXXFLAGS=-fpermissive
[2022-11-11 16:32:59] [build-stderr] + configure_prefix_opt=
[2022-11-11 16:32:59] [build-stderr] + '[' -f configure.ac ']'
[2022-11-11 16:32:59] [build-stderr] + configure_prefix_opt=--prefix=/usr
[2022-11-11 16:32:59] [build-stderr] + '[' -f CMakeLists.txt ']'
[2022-11-11 16:32:59] [build-stderr] + '[' -f meson.build ']'
[2022-11-11 16:32:59] [build-stderr] + try_configure
[2022-11-11 16:32:59] [build-stderr] + build_dir=.
[2022-11-11 16:32:59] [build-stderr] + root_dir=.
[2022-11-11 16:32:59] [build-stderr] + grep -q 'AC_MSG_.* configure in a separate.* directory' configure.in configure.ac
[2022-11-11 16:32:59] [build-stderr] + for configure in configure configure.gnu
[2022-11-11 16:32:59] [build-stderr] + '[' -x configure ']'
[2022-11-11 16:32:59] [build-stderr] + cd .
[2022-11-11 16:32:59] [build-stderr] + /home/arun/codeql/cpp/tools/configure-wrapper ./configure --prefix=/usr
[2022-11-11 16:32:59] [build-stdout] checking for a BSD-compatible install... /usr/bin/install -c
[2022-11-11 16:33:00] [build-stdout] checking whether build environment is sane... yes
[2022-11-11 16:33:00] [build-stdout] checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
[2022-11-11 16:33:00] [build-stdout] checking for gawk... no
[2022-11-11 16:33:00] [build-stdout] checking for mawk... mawk
[2022-11-11 16:33:00] [build-stdout] checking whether make sets $(MAKE)... yes
[2022-11-11 16:33:00] [build-stdout] checking how to create a ustar tar archive... gnutar
[2022-11-11 16:33:00] [build-stdout] checking for ranlib... ranlib
[2022-11-11 16:33:00] [build-stdout] checking build system type... x86_64-unknown-linux-gnu
[2022-11-11 16:33:00] [build-stdout] checking host system type... x86_64-unknown-linux-gnu
[2022-11-11 16:33:00] [build-stdout] checking for style of include used by make... GNU
[2022-11-11 16:33:00] [build-stdout] checking for gcc... gcc
[2022-11-11 16:33:00] [build-stdout] checking whether the C compiler works... yes
[2022-11-11 16:33:00] [build-stdout] checking for C compiler default output file name... a.out
[2022-11-11 16:33:00] [build-stdout] checking for suffix of executables... 
[2022-11-11 16:33:00] [build-stdout] checking whether we are cross compiling... no
[2022-11-11 16:33:00] [build-stdout] checking for suffix of object files... o
[2022-11-11 16:33:00] [build-stdout] checking whether we are using the GNU C compiler... yes
[2022-11-11 16:33:00] [build-stdout] checking whether gcc accepts -g... yes
[2022-11-11 16:33:00] [build-stdout] checking for gcc option to accept ISO C89... none needed
[2022-11-11 16:33:00] [build-stdout] checking dependency style of gcc... gcc3
[2022-11-11 16:33:00] [build-stdout] checking how to run the C preprocessor... gcc -E
[2022-11-11 16:33:00] [build-stdout] checking for grep that handles long lines and -e... /usr/bin/grep
[2022-11-11 16:33:00] [build-stdout] checking for egrep... /usr/bin/grep -E
[2022-11-11 16:33:01] [build-stdout] checking for ANSI C header files... yes
[2022-11-11 16:33:01] [build-stdout] checking for sys/types.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for sys/stat.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for stdlib.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for string.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for memory.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for strings.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for inttypes.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for stdint.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for unistd.h... yes
[2022-11-11 16:33:01] [build-stdout] checking minix/config.h usability... no
[2022-11-11 16:33:01] [build-stdout] checking minix/config.h presence... no
[2022-11-11 16:33:01] [build-stdout] checking for minix/config.h... no
[2022-11-11 16:33:01] [build-stdout] checking whether it is safe to define __EXTENSIONS__... yes
[2022-11-11 16:33:01] [build-stdout] checking for gcc option to accept ISO C99... none needed
[2022-11-11 16:33:01] [build-stdout] checking for gcc option to accept ISO Standard C... (cached) none needed
[2022-11-11 16:33:01] [build-stdout] checking for gcc... (cached) gcc
[2022-11-11 16:33:01] [build-stdout] checking whether we are using the GNU C compiler... (cached) yes
[2022-11-11 16:33:01] [build-stdout] checking whether gcc accepts -g... (cached) yes
[2022-11-11 16:33:01] [build-stdout] checking for gcc option to accept ISO C89... (cached) none needed
[2022-11-11 16:33:01] [build-stdout] checking dependency style of gcc... (cached) gcc3
[2022-11-11 16:33:01] [build-stdout] checking for flex... no
[2022-11-11 16:33:01] [build-stdout] checking for lex... no
[2022-11-11 16:33:01] [build-stdout] checking for ranlib... (cached) ranlib
[2022-11-11 16:33:01] [build-stdout] checking for ANSI C header files... (cached) yes
[2022-11-11 16:33:01] [build-stdout] checking for stdlib.h... (cached) yes
[2022-11-11 16:33:01] [build-stdout] checking for string.h... (cached) yes
[2022-11-11 16:33:01] [build-stdout] checking for unistd.h... (cached) yes
[2022-11-11 16:33:01] [build-stdout] checking locale.h usability... yes
[2022-11-11 16:33:01] [build-stdout] checking locale.h presence... yes
[2022-11-11 16:33:01] [build-stdout] checking for locale.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for error_at_line... yes
[2022-11-11 16:33:01] [build-stdout] checking for memmove... yes
[2022-11-11 16:33:01] [build-stdout] checking for memset... yes
[2022-11-11 16:33:01] [build-stdout] checking for strdup... yes
[2022-11-11 16:33:01] [build-stdout] checking for strerror... yes
[2022-11-11 16:33:01] [build-stdout] checking for strtol... yes
[2022-11-11 16:33:01] [build-stdout] checking for setlocale... yes
[2022-11-11 16:33:01] [build-stdout] checking for size_t... yes
[2022-11-11 16:33:01] [build-stdout] checking for working alloca.h... yes
[2022-11-11 16:33:01] [build-stdout] checking for alloca... yes
[2022-11-11 16:33:01] [build-stdout] checking for inline... inline
[2022-11-11 16:33:01] [build-stdout] checking for C/C++ restrict keyword... __restrict
[2022-11-11 16:33:01] [build-stdout] checking whether getenv is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether clearerr_unlocked is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether feof_unlocked is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether ferror_unlocked is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether fflush_unlocked is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether fgets_unlocked is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether fputc_unlocked is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether fputs_unlocked is declared... yes
[2022-11-11 16:33:01] [build-stdout] checking whether fread_unlocked is declared... yes
[2022-11-11 16:33:02] [build-stdout] checking whether fwrite_unlocked is declared... yes
[2022-11-11 16:33:02] [build-stdout] checking whether getc_unlocked is declared... yes
[2022-11-11 16:33:02] [build-stdout] checking whether getchar_unlocked is declared... yes
[2022-11-11 16:33:02] [build-stdout] checking whether putc_unlocked is declared... yes
[2022-11-11 16:33:02] [build-stdout] checking whether putchar_unlocked is declared... yes
[2022-11-11 16:33:02] [build-stdout] checking for flockfile... yes
[2022-11-11 16:33:02] [build-stdout] checking for funlockfile... yes
[2022-11-11 16:33:02] [build-stdout] checking for lstat... yes
[2022-11-11 16:33:02] [build-stdout] checking for mprotect... yes
[2022-11-11 16:33:02] [build-stdout] checking for strndup... yes
[2022-11-11 16:33:02] [build-stdout] checking for vasnprintf... no
[2022-11-11 16:33:02] [build-stdout] checking for features.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for linewrap.h... no
[2022-11-11 16:33:02] [build-stdout] checking for errno.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for float.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for getopt.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for sys/mman.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for stdarg.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for stddef.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for stdint.h... (cached) yes
[2022-11-11 16:33:02] [build-stdout] checking for wchar.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for stdio.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for stdlib.h... (cached) yes
[2022-11-11 16:33:02] [build-stdout] checking for sys/socket.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for string.h... (cached) yes
[2022-11-11 16:33:02] [build-stdout] checking for strings.h... (cached) yes
[2022-11-11 16:33:02] [build-stdout] checking for sys/stat.h... (cached) yes
[2022-11-11 16:33:02] [build-stdout] checking for sysexits.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for time.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for sys/time.h... yes
[2022-11-11 16:33:02] [build-stdout] checking for unistd.h... (cached) yes
[2022-11-11 16:33:02] [build-stdout] checking whether system is Windows or MSDOS... no
[2022-11-11 16:33:02] [build-stdout] checking whether // is distinct from /... no
[2022-11-11 16:33:02] [build-stdout] checking whether the preprocessor supports include_next... yes
[2022-11-11 16:33:02] [build-stdout] checking for complete errno.h... yes
[2022-11-11 16:33:02] [build-stdout] checking whether strerror_r is declared... yes
[2022-11-11 16:33:02] [build-stdout] checking for strerror_r... yes
[2022-11-11 16:33:02] [build-stdout] checking whether strerror_r returns char *... yes
[2022-11-11 16:33:02] [build-stdout] checking for getopt.h... (cached) yes
[2022-11-11 16:33:02] [build-stdout] checking for getopt_long_only... yes
[2022-11-11 16:33:02] [build-stdout] checking whether getopt is POSIX compatible... yes
[2022-11-11 16:33:02] [build-stdout] checking for working GNU getopt function... yes
[2022-11-11 16:33:02] [build-stdout] checking for stdbool.h that conforms to C99... yes
[2022-11-11 16:33:03] [build-stdout] checking for _Bool... yes
[2022-11-11 16:33:03] [build-stdout] checking whether lstat correctly handles trailing slash... yes
[2022-11-11 16:33:03] [build-stdout] checking whether malloc, realloc, calloc are POSIX compliant... yes
[2022-11-11 16:33:03] [build-stdout] checking for mmap... yes
[2022-11-11 16:33:03] [build-stdout] checking for MAP_ANONYMOUS... yes
[2022-11-11 16:33:03] [build-stdout] checking for memchr... yes
[2022-11-11 16:33:03] [build-stdout] checking whether memchr works... yes
[2022-11-11 16:33:03] [build-stdout] checking whether snprintf is declared... yes
[2022-11-11 16:33:03] [build-stdout] checking for wchar_t... yes
[2022-11-11 16:33:03] [build-stdout] checking for long long int... yes
[2022-11-11 16:33:03] [build-stdout] checking for unsigned long long int... yes
[2022-11-11 16:33:03] [build-stdout] checking for working strerror function... yes
[2022-11-11 16:33:03] [build-stdout] checking whether strndup is declared... yes
[2022-11-11 16:33:03] [build-stdout] checking whether strnlen is declared... yes
[2022-11-11 16:33:03] [build-stdout] checking whether stat file-mode macros are broken... no
[2022-11-11 16:33:03] [build-stdout] checking for struct timespec in <time.h>... yes
[2022-11-11 16:33:03] [build-stdout] checking for wint_t... yes
[2022-11-11 16:33:03] [build-stdout] checking for inttypes.h... yes
[2022-11-11 16:33:03] [build-stdout] checking for stdint.h... yes
[2022-11-11 16:33:03] [build-stdout] checking for intmax_t... yes
[2022-11-11 16:33:03] [build-stdout] checking for snprintf... yes
[2022-11-11 16:33:03] [build-stdout] checking for strnlen... yes
[2022-11-11 16:33:03] [build-stdout] checking for wcslen... yes
[2022-11-11 16:33:03] [build-stdout] checking for wcsnlen... yes
[2022-11-11 16:33:03] [build-stdout] checking for mbrtowc... yes
[2022-11-11 16:33:03] [build-stdout] checking for wcrtomb... yes
[2022-11-11 16:33:03] [build-stdout] checking whether _snprintf is declared... no
[2022-11-11 16:33:03] [build-stdout] checking whether vsnprintf is declared... yes
[2022-11-11 16:33:03] [build-stdout] checking for alloca as a compiler built-in... yes
[2022-11-11 16:33:03] [build-stdout] checking whether program_invocation_name is declared... yes
[2022-11-11 16:33:03] [build-stdout] checking whether program_invocation_short_name is declared... yes
[2022-11-11 16:33:03] [build-stdout] checking whether program_invocation_name is defined... yes
[2022-11-11 16:33:03] [build-stdout] checking whether program_invocation_short_name is defined... yes
[2022-11-11 16:33:03] [build-stdout] checking whether // is distinct from /... (cached) no
[2022-11-11 16:33:03] [build-stdout] checking for error_at_line... (cached) yes
[2022-11-11 16:33:03] [build-stdout] checking whether the compiler generally respects inline... yes
[2022-11-11 16:33:03] [build-stdout] checking for stdlib.h... (cached) yes
[2022-11-11 16:33:03] [build-stdout] checking for GNU libc compatible malloc... yes
[2022-11-11 16:33:03] [build-stdout] checking for mempcpy... yes
[2022-11-11 16:33:03] [build-stdout] checking for obstacks... yes
[2022-11-11 16:33:03] [build-stdout] checking whether program_invocation_name is declared... (cached) yes
[2022-11-11 16:33:03] [build-stdout] checking whether program_invocation_short_name is declared... (cached) yes
[2022-11-11 16:33:04] [build-stdout] checking for rawmemchr... yes
[2022-11-11 16:33:04] [build-stdout] checking for stdint.h... (cached) yes
[2022-11-11 16:33:04] [build-stdout] checking for SIZE_MAX... yes
[2022-11-11 16:33:04] [build-stdout] checking whether sleep is declared... yes
[2022-11-11 16:33:04] [build-stdout] checking for snprintf... (cached) yes
[2022-11-11 16:33:04] [build-stdout] checking whether snprintf respects a size of 1... yes
[2022-11-11 16:33:04] [build-stdout] checking whether stat handles trailing slashes on directories... yes
[2022-11-11 16:33:04] [build-stdout] checking whether stat handles trailing slashes on files... yes
[2022-11-11 16:33:04] [build-stdout] checking for va_copy... yes
[2022-11-11 16:33:04] [build-stdout] checking whether NULL can be used in arbitrary expressions... yes
[2022-11-11 16:33:04] [build-stdout] checking whether stdint.h conforms to C99... yes
[2022-11-11 16:33:04] [build-stdout] checking for random.h... no
[2022-11-11 16:33:04] [build-stdout] checking for struct random_data... yes
[2022-11-11 16:33:04] [build-stdout] checking for strcasecmp... yes
[2022-11-11 16:33:04] [build-stdout] checking for strncasecmp... yes
[2022-11-11 16:33:04] [build-stdout] checking whether strncasecmp is declared... yes
[2022-11-11 16:33:04] [build-stdout] checking for strchrnul... yes
[2022-11-11 16:33:04] [build-stdout] checking for working strndup... yes
[2022-11-11 16:33:04] [build-stdout] checking for working strnlen... yes
[2022-11-11 16:33:04] [build-stdout] checking for nlink_t... yes
[2022-11-11 16:33:04] [build-stdout] checking for ptrdiff_t... yes
[2022-11-11 16:33:04] [build-stdout] checking for vsnprintf... yes
[2022-11-11 16:33:04] [build-stdout] checking whether snprintf respects a size of 1... (cached) yes
[2022-11-11 16:33:04] [build-stdout] checking whether <wchar.h> is standalone... yes
[2022-11-11 16:33:04] [build-stdout] checking for stdint.h... (cached) yes
[2022-11-11 16:33:04] [build-stdout] checking for emacs... no
[2022-11-11 16:33:04] [build-stdout] checking for xemacs... no
[2022-11-11 16:33:04] [build-stdout] checking where .elc files should go... ${datadir}/emacs/site-lisp
[2022-11-11 16:33:04] [build-stdout] checking for ld used by GCC... /usr/bin/ld
[2022-11-11 16:33:04] [build-stdout] checking if the linker (/usr/bin/ld) is GNU ld... yes
[2022-11-11 16:33:04] [build-stdout] checking for shared library run path origin... done
[2022-11-11 16:33:04] [build-stdout] checking for iconv... yes
[2022-11-11 16:33:04] [build-stdout] checking for working iconv... yes
[2022-11-11 16:33:04] [build-stdout] checking for iconv declaration... 
[2022-11-11 16:33:04] [build-stdout]          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
[2022-11-11 16:33:04] [build-stdout] checking whether NLS is requested... yes
[2022-11-11 16:33:04] [build-stdout] checking for msgfmt... /usr/bin/msgfmt
[2022-11-11 16:33:04] [build-stdout] checking for gmsgfmt... /usr/bin/msgfmt
[2022-11-11 16:33:04] [build-stdout] checking for xgettext... /usr/bin/xgettext
[2022-11-11 16:33:04] [build-stdout] checking for msgmerge... /usr/bin/msgmerge
[2022-11-11 16:33:04] [build-stdout] checking for CFPreferencesCopyAppValue... no
[2022-11-11 16:33:04] [build-stdout] checking for CFLocaleCopyCurrent... no
[2022-11-11 16:33:04] [build-stdout] checking for GNU gettext in libc... yes
[2022-11-11 16:33:04] [build-stdout] checking whether to use NLS... yes
[2022-11-11 16:33:04] [build-stdout] checking where the gettext function comes from... libc
[2022-11-11 16:33:04] [build-stdout] configure: creating ./config.status
[2022-11-11 16:33:04] [build-stdout] config.status: creating tests/Makefile
[2022-11-11 16:33:04] [build-stdout] config.status: creating tests/atlocal
[2022-11-11 16:33:04] [build-stdout] config.status: creating Makefile
[2022-11-11 16:33:04] [build-stdout] config.status: creating gnu/Makefile
[2022-11-11 16:33:04] [build-stdout] config.status: creating src/Makefile
[2022-11-11 16:33:04] [build-stdout] config.status: creating elisp/Makefile
[2022-11-11 16:33:04] [build-stdout] config.status: creating po/Makefile.in
[2022-11-11 16:33:04] [build-stdout] config.status: creating doc/Makefile
[2022-11-11 16:33:04] [build-stdout] config.status: creating config.h
[2022-11-11 16:33:04] [build-stdout] config.status: config.h is unchanged
[2022-11-11 16:33:04] [build-stdout] config.status: executing depfiles commands
[2022-11-11 16:33:05] [build-stdout] config.status: executing po-directories commands
[2022-11-11 16:33:05] [build-stdout] config.status: creating po/POTFILES
[2022-11-11 16:33:05] [build-stdout] config.status: creating po/Makefile
[2022-11-11 16:33:05] [build-stdout] config.status: executing tests/atconfig commands
[2022-11-11 16:33:05] [build-stderr] + '[' -f Makefile ']'
[2022-11-11 16:33:05] [build-stderr] + exit 0
[2022-11-11 16:33:05] [build-stderr] + export VERBOSE=1
[2022-11-11 16:33:05] [build-stderr] + VERBOSE=1
[2022-11-11 16:33:05] [build-stderr] + '[' -L _lgtm_detected_source_root ']'
[2022-11-11 16:33:05] [build-stderr] ++ readlink _lgtm_detected_source_root
[2022-11-11 16:33:05] [build-stderr] + cd .
[2022-11-11 16:33:05] [build-stderr] + '[' -d _lgtm_build_dir ']'
[2022-11-11 16:33:05] [build-stderr] + '[' -f SConstruct ']'
[2022-11-11 16:33:05] [build-stderr] + '[' -f wscript ']'
[2022-11-11 16:33:05] [build-stderr] + '[' -f Makefile ']'
[2022-11-11 16:33:05] [build-stderr] + make
[2022-11-11 16:33:05] [build-stdout] make  all-recursive
[2022-11-11 16:33:05] [build-stdout] make[1]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow'
[2022-11-11 16:33:05] [build-stdout] Making all in gnu
[2022-11-11 16:33:05] [build-stdout] make[2]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/gnu'
[2022-11-11 16:33:05] [build-stdout] make  all-recursive
[2022-11-11 16:33:05] [build-stdout] make[3]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/gnu'
[2022-11-11 16:33:05] [build-stdout] make[4]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/gnu'
[2022-11-11 16:33:05] [build-stdout] make[4]: Nothing to be done for 'all-am'.
[2022-11-11 16:33:05] [build-stdout] make[4]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/gnu'
[2022-11-11 16:33:05] [build-stdout] make[3]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/gnu'
[2022-11-11 16:33:05] [build-stdout] make[2]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/gnu'
[2022-11-11 16:33:05] [build-stdout] Making all in src
[2022-11-11 16:33:05] [build-stdout] make[2]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/src'
[2022-11-11 16:33:05] [build-stdout] make[2]: Nothing to be done for 'all'.
[2022-11-11 16:33:05] [build-stdout] make[2]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/src'
[2022-11-11 16:33:05] [build-stdout] Making all in elisp
[2022-11-11 16:33:05] [build-stdout] make[2]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/elisp'
[2022-11-11 16:33:05] [build-stdout] make[2]: Nothing to be done for 'all'.
[2022-11-11 16:33:05] [build-stdout] make[2]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/elisp'
[2022-11-11 16:33:05] [build-stdout] Making all in po
[2022-11-11 16:33:05] [build-stdout] make[2]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/po'
[2022-11-11 16:33:05] [build-stdout] make[2]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/po'
[2022-11-11 16:33:05] [build-stdout] Making all in doc
[2022-11-11 16:33:05] [build-stdout] make[2]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/doc'
[2022-11-11 16:33:05] [build-stdout] restore=: && backupdir=".am$$" && \
[2022-11-11 16:33:05] [build-stdout] am__cwd=`pwd` && CDPATH="${ZSH_VERSION+.}:" && cd . && \
[2022-11-11 16:33:05] [build-stdout] rm -rf $backupdir && mkdir $backupdir && \
[2022-11-11 16:33:05] [build-stdout] if (/bin/bash /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/build-aux/missing --run makeinfo --version) >/dev/null 2>&1; then \
[2022-11-11 16:33:05] [build-stdout]   for f in cflow.info cflow.info-[0-9] cflow.info-[0-9][0-9] cflow.i[0-9] cflow.i[0-9][0-9]; do \
[2022-11-11 16:33:05] [build-stdout]     if test -f $f; then mv $f $backupdir; restore=mv; else :; fi; \
[2022-11-11 16:33:05] [build-stdout]   done; \
[2022-11-11 16:33:05] [build-stdout] else :; fi && \
[2022-11-11 16:33:05] [build-stdout] cd "$am__cwd"; \
[2022-11-11 16:33:05] [build-stdout] if /bin/bash /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/build-aux/missing --run makeinfo  -DDISTRIB -I . \
[2022-11-11 16:33:05] [build-stdout]  -o cflow.info cflow.texi; \
[2022-11-11 16:33:05] [build-stdout] then \
[2022-11-11 16:33:05] [build-stdout]   rc=0; \
[2022-11-11 16:33:05] [build-stdout]   CDPATH="${ZSH_VERSION+.}:" && cd .; \
[2022-11-11 16:33:05] [build-stdout] else \
[2022-11-11 16:33:05] [build-stdout]   rc=$?; \
[2022-11-11 16:33:05] [build-stdout]   CDPATH="${ZSH_VERSION+.}:" && cd . && \
[2022-11-11 16:33:05] [build-stdout]   $restore $backupdir/* `echo "./cflow.info" | sed 's|[^/]*$||'`; \
[2022-11-11 16:33:05] [build-stdout] fi; \
[2022-11-11 16:33:05] [build-stdout] rm -rf $backupdir; exit $rc
[2022-11-11 16:33:05] [build-stderr] /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/build-aux/missing: line 52: makeinfo: command not found
[2022-11-11 16:33:05] [build-stderr] WARNING: `makeinfo' is missing on your system.  You should only need it if
[2022-11-11 16:33:05] [build-stderr]          you modified a `.texi' or `.texinfo' file, or any other file
[2022-11-11 16:33:05] [build-stderr]          indirectly affecting the aspect of the manual.  The spurious
[2022-11-11 16:33:05] [build-stderr]          call might also be the consequence of using a buggy `make' (AIX,
[2022-11-11 16:33:05] [build-stderr]          DU, IRIX).  You might want to install the `Texinfo' package or
[2022-11-11 16:33:05] [build-stderr]          the `GNU make' package.  Grab either from any GNU archive site.
[2022-11-11 16:33:05] [build-stdout] make[2]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/doc'
[2022-11-11 16:33:05] [build-stdout] Making all in tests
[2022-11-11 16:33:05] [build-stdout] make[2]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/tests'
[2022-11-11 16:33:05] [build-stdout] make[2]: Nothing to be done for 'all'.
[2022-11-11 16:33:05] [build-stdout] make[2]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/tests'
[2022-11-11 16:33:05] [build-stdout] make[2]: Entering directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow'
[2022-11-11 16:33:05] [build-stdout] make[2]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow'
[2022-11-11 16:33:05] [build-stdout] make[1]: Leaving directory '/home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow'
[2022-11-11 16:33:05] [build-stderr] + exit 0
[2022-11-11 16:33:05] Plumbing command codeql database trace-command completed.
[2022-11-11 16:33:05] [PROGRESS] database create> Finalizing database at /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/cflowDB.
[2022-11-11 16:33:05] Running plumbing command: codeql database finalize --mode=normal --no-db-cluster -- /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/cflowDB
[2022-11-11 16:33:05] [ERROR] database finalize> No source code was seen and extracted to /home/arun/Desktop/TakeDownHSS/CodeQL/RealWorldRepos/cflow/cflowDB.
                              This can occur if the specified build commands failed to compile or process any code.
                               - Confirm that there is some source code for the specified language in the project.
                               - For codebases written in Go, JavaScript, TypeScript, and Python, do not specify 
                                 an explicit --command.
                               - For other languages, the --command must specify a "clean" build which compiles 
                                 all the source code files without reusing existing build artefacts.
[2022-11-11 16:33:05] Plumbing command codeql database finalize completed with status 32.
[2022-11-11 16:33:05] Exiting with code 32
